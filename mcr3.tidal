{-
manchester algorave #3
by anny: http://anny.audio
setlist:
  1. juliese
  2. piston iv
  3. haddeo (algorave remix)
-}

hush

{-
piston iv
-}

let d'drum = d1 -- k, sn
let d'perc = d2 -- wt, wtsn, hh
let d'gnome = d3 -- gnome, cymb
let d'bass = d4 -- dubb, k
let d'fly = d5 -- fly
let d'bz = d6 -- bz, bzl, ff
let d'shard = d7 -- ice, plode
let d'ant = d9 -- ant
let d'misc = d8 -- overflow channel for a few cases
let d'cymb = d10 -- cymb

let bass2'3 = slow 8 $ chop 16 $ bass'params $ sound "[dubb dubb:1]/2"
              |=| cut "1"
              |=| speed "0.2"
              |=| vowel "e"

let bass'params = (|=| gain "0.7").
                  (|=| hcutoff "485").
                  (|=| hresonance "0.001")

let drum5'4 = sound "[[~ [wt wtsn]] ~ wt ~]/5"

-- used with ice, plode, wtsn..
let plox'4 s = within (0.5, 0.75) (iter 4) $
               whenmod 3 2 (slow 2) $
               slow 8 $ every 2 rev $ striate 128 $ sound s
               |=| cutoff "441"
               |=| resonance "0.001"
               |=| speed "0.7"
               |=| gain "0.7"

let bass'4 = whenmod 5 3 (density (3%2) . brak) $
             bass'params $
             rev $ (0.5 ~>) $ slow 2 . chop 8 $ sound "[dubb dubb:1]/2"
             |=| speed "0.5"
             |=| cut "1"
             |=| end "0.5"

let bz'4 = (0.5 <~) $ slow 16 . chop 32 $ sound (samples "bzl" (density 1.5 "0 1"))
           |=| speed ((+1) <$> density 1.7 sinewave1)
           |=| gain "0.9"

-- used with bz, bzl
let bzox'4 s = whenmod 7 4 (within (0.5, 1) (density 2)) $
               (0.5 <~) $
               slow 16 . chop 32 $ sound (samples s (density 1.5 "0 1"))
               |=| speed ((+1.6) <$> density 2.2 sinewave1)
               |=| pan ((+0.25).(/2) <$> density 4.1 sinewave1)

-- go
bpm 138
solo $ d'misc $ bass2'3
d'perc $ drum5'4
d'shard $ plox'4 "[ice plode]*2"

-- we're back
d'drum $ sound "[k sn k*2 [~ sn] [~ k]]/5"
d'perc $ smash 4 [0.5,0.25] $ iter 3 $ drum5'4

d'bz $ bz'4

d'misc silence
d'shard $ whenmod 7 3 (density (5%4)) $ plox'4 "[ice plode]*2"
d'drum $ sound "[[k k:1]*2 sn k*2 [~ sn] [~ k]]/5"
d'bass $ (0.75 ~>) $ bass'4

-- o yes
msil [d'perc,d'bz,d'shard]
d'bz $ bzox'4 "bz"
d'drum $ sound "[k*2 sn [~ k] sn]/4"
d'bz $ bzox'4 "bz*2"
d'shard $ whenmod 7 3 (density (5%4)) $ plox'4 "[ice wtsn]*2" |=| vowel "u e"
d'bz $ every 3 brak $ bzox'4 "bz*2"

d'perc $ smash 4 [0.5,0.25] $ iter 3 $ drum5'4
d'drum silence
d'drum $ sound "[[k ~ ~ k] sn [~ k] sn]/4"

d'bz $ every 3 brak $ bzox'4 "bz bzl"

msil [d'perc,d'bass,d'shard]
d'bz $ every 2 brak $ bzox'4 "bz*2"

-- transition to haddeo
d'drum $ s "[~ sn]/2"
bpm 135
bpm 130 -- ...to 99
d'drum silence

{-
anny: juliese
to be performed at leeds algorave, 29th april 2016
-}

cps (99/60)

-- alt every
let every' n o f = when ((== (o-1)) . (`mod` n)) f

-- channel maps
let d'drum = d1
    d'perc = d2
    d'bass = d3
    d'eg = d4
    d'gt = d5
    d'udu = d6
    d'pc = d7
    d'pcl = d8
    d'wbass = d9

-- bass template
let bassbass = sound "[[vb vb:1] ~]/2"
               # end (slow 1.4 "0.2 0.4")
               # vowel "e o"

let bassbass' = bassbass # speed (slow 2.5 "1 -1")

-- lay more k over 4tf k
let morek = every' 8 8 (overlay $ (0.32 ~>) $ s "k*2")

-- final main drum loop, for reference
-- n.b. DO NOT copy such shit all over the place like you did with piston, you ass
let drum1'f = overlay ((0.5 ~>) $ s "jsn/2") $ every' 12 2 (density 3) $ morek $ s "k"

-- basic hats
let hhb m = smash 16 [0.25, 0.5] $
            (if m then (every 3 (append $ sound "jhh:1 jhh")) else id) $
            sound "jhh jhh:2"
            # gain "0.6"

-- udu
let ududu = slow 4 . chop 128 $
            sound (samples "udu" (slow 4 $ irand 4))
            # gain "0.8"
            # cut "6"

-- guitar (i think)
let eg = gap 128 $ s "eg*2"
         # cut "4"

-- other guitar
let gt = every 2 (within (0, 0.5) (0.07 <~)) $ (0.07 ~>) $
         chop 128 $
         s "[gt [~ gt] ! ~]/2"
         # cut "5"

let pcbeep = slow 16 $ gap 48 $ sound "pc:1"
             # gain "0.7"
             # cut "7"
             # speed "[1 0.7]"

{-
here goes i guess
-}

hush

d'drum $ s "k"
d'bass $ bassbass
d'drum $ morek $ s "k"
d'bass $ bassbass'

d'perc $ hhb False
d'bz silence

d'perc $ whenmod 16 15 (density 3) $ hhb False

d'drum $ overlay ((0.5 ~>) $ s "jsn/2") $ morek $ s "k"

d'perc $ whenmod 16 15 (density 3) $ hhb True

d'drum $ overlay ((1 ~>) $ s "cy/8") $
  overlay ((0.5 ~>) $ s "jsn/2") $ morek $ s "k"

d'bass $ whenmod 3 2 (slow 2) $ bassbass'
d'bass $ whenmod 4 2 (density 3) $ whenmod 3 2 (slow 2) $ bassbass'

d'perc $ (# pan (density 16 "0.25 0.75")) $ whenmod 16 15 (density 3) $ hhb True

d'perc $ iter 4 $ (# pan (density 16 "0.25 0.75")) $ whenmod 16 15 (density 3) $ hhb True
d'drum $ overlay ((0.5 ~>) $ s "jsn/2") $ morek $ s "k"

d'udu $ ududu

d'wbass $ chop 16 $ sound "[wb wb:1 ~ ~]/4" # gain "0.9"
d'wbass $ chop 16 $ sound "[wb [wb:1 wb:2] ~ ~]/4" # gain "0.9"

d'wbass $ every' 4 4 (0.32 ~>) $ chop 16 $ sound "[wb [wb:1 wb:2] ~ [wb:1 wb:2]]/4" # gain "0.9"

d'eg $ density 0.25 $ eg
  # gain "0.8"

d'eg $
  density 0.25 $
  slowspread density [1, 2, 0.5, 2] $ eg
  # gain "0.8"

d'eg $ (# speed ((+0.8).(/2) <$> slow 4 saw1)) $
  density 0.25 $
  slowspread density [1, 2, 0.5, 2] $ eg
  # gain "0.8"

d'wbass $ every' 4 4 (0.32 ~>) $ chop 16 $ sound "[wb [wb:1 wb:2] ~ [wb:1 wb:2]]/4" # gain "0.9"
  # speed "[1 1 2]/3"

d'eg $ (# speed ((+0.8).(/2) <$> slow 4 saw1)) $
  density 0.245 $ -- !
  slowspread density [1, 2, 0.5, 2] $ eg
  # gain "0.8"

mapM_ ($ silence) [d'perc, d'bass]

-- fuck yeah. const rules
d'eg $ (0.18 <~) $ every 2 (const silence) $
  (# speed ((+0.8).(/2) <$> slow 4 saw1)) $
  density 0.245 $
  slowspread density [1, 2, 0.5, 2] $ eg
  # gain "0.8"

d'udu $ (every' 3 2 . sometimesBy 0.5 $ density (4%3)) $ ududu
d'drum $ overlay ((0.5 ~>) $ s "jsn/2") $ morek $ every' 12 2 (density 3) $ s "k"

d'pc $ pcbeep
d'pc $ slowspread (\x -> within x (slow 1.5)) [(0.25, 0.5), (0.75, 1), (0.25, 0.75)] $ pcbeep

d'udu $ (every' 3 2 . sometimesBy 0.5 $ density (4%3)) $
  (whenmod 7 5 $ trunc (5%6)) $ ududu

d'pc $ slowspread ($) [rev, id, brak, (0.25 ~>), id] $
  slowspread (\x -> within x (slow 1.5)) [(0.25, 0.5), (0.75, 1), (0.25, 0.75)] $ pcbeep

d'wbass $ every' 4 4 (0.32 ~>) $ chop 16 $ sound "[wb [wb:1 wb:2] ~ [[wb:1 wb:1/2] wb:2]]/4" # gain "0.9"
  # speed "[1 1 2]/3"

d'pc $ whenmod 7 5 (density 1.25) $
  slowspread ($) [rev, id, brak, (0.25 ~>), id] $
  slowspread (\x -> within x (slow 1.5)) [(0.25, 0.5), (0.75, 1), (0.25, 0.75)] $ pcbeep

d'gt $ gt
  # gain "0.87"

d'gt $ gt
  # gain "0.87"
  # speed ((+1).(/4) <$> slow 1.95 sinewave1)

-- OOOOOOHHHH MY FUCK
d'wbass $ (sometimesBy 0.6 $ superimpose (rev . slow (5%4))) $
  every' 4 4 (0.32 ~>) $ chop 16 $ sound "[wb [wb:1 wb:2] ~ [[wb:1 wb:1/2] wb:2]]/4" # gain "0.9"
  # speed "[1 1 2]/3"

d'perc $ iter 4 $ (# pan (density 16 "0.25 0.75")) $ whenmod 16 15 (density 3) $ hhb True

-- funkier bassline w slowspread lambda, thanks yaxu. thaxu
d'bass $ slowspread (\x -> within (0.5, 1) (x)) [id, slow 2 . brak] $
  whenmod 4 2 (density 3) $ whenmod 3 2 (slow 2) $ bassbass'

d'udu $ (every' 5 3 $ brak) $
  (every' 3 2 . sometimesBy 0.5 $ density (4%3)) $
  (whenmod 7 5 $ trunc (5%6)) $ ududu

-- bye const
d'eg $ (0.18 <~) $
  (# speed ((+0.8).(/2) <$> slow 4 saw1)) $
  density 0.245 $
  slowspread density [1, 2, 0.5, 2] $ eg
  # gain "0.8"

d'gt $ density 0.98 $ gt
  # gain "0.87"
  # speed ((+1).(/4) <$> slow 1.95 sinewave1)

let ju'drum2 = stack [
               every' 8 7 (overlay $ (0.32 ~>) $ s "k") $ s "[k ~ k*2 ~]/4",
               every' 16 16 (overlay $ (0.82 ~>) $ s "jsn") $ (1 ~>) $ s "jsn/2"
               ]

mapM_ ($ silence) [d'eg, d'wbass]
d'drum $ ju'drum2

mapM_ ($ silence) [d'bass, d'udu, d'pc]
mapM_ ($ silence) [d'gt]

{-
haddeo (algorave remix)
-}

let bpm b = cps (b/60)
    withmod a b c d = (whenmod a b . within (c, d))
    every' n o f = when ((== (o-1)) . (`mod` n)) f
    msil = mapM_ ($ silence)
    tmod s e = (# nudge (scale 0 s $ fmap (**e) saw1))

let swing a = within (0.1, 0.4) (a ~>) . within (0.6, 0.9) (a ~>)
    swing' = swing 0.14 --0.05

let d'drum = d1
    d'bass = d3
    d'bass2 = d2
    d'wax = d4
    d'nim = d5
    d'hi = d6
    d'fx1 = d8
    d'fx2 = d9
    d'fx3 = d10

let nim'osc = (# speed ((+0.8).(/1.5) <$> slow 2.5 sine1))
    nim'del = (# delay "0.5") . (# delayfeedback "0.6") . (# delaytime "0.25")

-- original bpm = 105
let tmod' s e = tmod (s*(1/(105/60))) e
    mt s d i = slow s $ tmod' 0.5 3 $ density d $ i

bpm 105

-- pt 1: intro

d'drum $ stack [
  n "1/4" # s "drum"
  ]

d'perc $ iter 4 $ (# pan (density 16 "0.25 0.75")) $ whenmod 16 15 (density 3) $ hhb True
  # gain "0.4"

d'perc silence

d'wax $ slow 16 . striate 256 $ s "icarus"

d'drum $ stack [
  n "1/4" # s "drum",
  n "[~ 0]" # s "kit"
  ]

d'drum $ stack [
  n "[1*2, 0*8]/8" # s "drum",
  n "[~ 0]" # s "kit"
  ]

d'wax $ retrig $ slow 20 $ sound "icarus:1"

-- drop 1

d'nim $ slow 16 . striate 256 $ n "[0 1]/2" # s "nimble"
d'wax silence

d'drum $ stack [
  n "[1*2, 0*8, [~!! [~!! 0] ! ~!!]]/8" # s "drum",
  n "~ 0" # s "kit"
  ]

d'drum $ stack [
  n "[1*2, 0*8, [~!! [~!! 0] ! ~!!]]/8" # s "drum",
  n "[[~ 0] [[2!! ~]/4 0]]/2" # s "kit"
  ]

d'wax $ slow 16 . striate 256 $ s "icarus"

d'drum $ stack [
  n "[1*2, 0*8, [~!! [~!! 0] ! ~!!]]/8" # s "drum",
  withmod 11 5 0.5 1 (density 2) $
  n "[[~ 0] [[2!! ~]/4 0]]/2" # s "kit"
  ]

d'fx3 $
  (1.5 ~>) $
  slow 4 $ chop 48 $
  sound (samples "snoo" <$> slow 7 $ run 7)
  # gain "0.8"
  # cut "10"

d'nim $ superimpose (iter 4) $
  slow 16 . striate 256 $ n "[0 1]/2" # s "nimble"

d'nim $ superimpose (iter 4 . nim'osc) $
  slow 16 . striate 256 $ n "[0 1]/2" # s "nimble"

d'fx1 $
  (2 ~>) $ chop 16 $
  s "dorr/4"
  # hresonance "0.05"
  # hcutoff "200"
  # gain "0.8"

d'drum $ stack [
  n "[1*2, 0*8, [~!! [~!! 0] ! ~!!]]/8" # s "drum",
  whenmod 3 2 (density 2) $
  withmod 11 5 0.5 1 (density 2) $
  n "[[~ 0] [[2!! ~]/4 0]]/2" # s "kit"
  ]

d'nim $ superimpose (iter 6 . nim'osc) $
  slow 16 . striate 256 $ n "[0 1]/2" # s "nimble"

-- pt 2: offbeat

d'drum $ mt 16 16 $ stack [
  n "[1*2, 0*8, [~!! [~!! 0] ! ~!!]]/8" # s "drum",
  whenmod 3 2 (density 2) $
  withmod 11 5 0.5 1 (density 2) $
  n "[[~ 0] [[2!! ~]/4 0]]/2" # s "kit"
  ]

d'nim $ superimpose (iter 6 . nim'osc . (# nudge "0")) $
  mt 16 16 $
  slow 16 . striate 256 $ n "[0 1]/2" # s "nimble"

d'fx1 $ mt 16 16 $
  (2 ~>) $ chop 16 $
  s "dorr/4"
  # hresonance "0.05"
  # hcutoff "200"
  # gain "0.8"

msil [d'wax, d'fx2, d'fx3]

d'nim $ mt 16 16 $
  slow 16 . striate 256 $ n "[0 1]/2" # s "nimble"

d'nim $ mt 16 16 $
  whenmod 5 3 rev $
  slow 16 . striate 256 $ n "[0 1]/2" # s "nimble"

d'nim $ mt 16 16 $
  every' 2 2 (within (0, 0.5) (const silence)) $
  whenmod 5 3 rev $
  slow 16 . striate 256 $ n "[0 1]/2" # s "nimble"

d'fx2 $ mt 16 16 $ 1.75 ~> s "tubal/4"

d'nim $ mt 16 16 $
  every 3 (density 2) $
  every' 2 2 (within (0, 0.5) (const silence)) $
  whenmod 5 3 rev $
  slow 16 . striate 256 $ n "[0 1]/2" # s "nimble"

d'fx2 $ mt 16 16 $
  stack [
    1.75 ~> s "tubal/4",
    chop 16 $
    3.75 ~> s "duck/4"
    # gain "0.6"
    # speed "0.9"
    ]

d'nim $ superimpose (iter 4 . nim'osc . (# nudge "0")) $
  mt 16 16 $
  every 3 (density 2) $
  every' 2 2 (within (0, 0.5) (const silence)) $
  whenmod 5 3 rev $
  slow 16 . striate 256 $ n "[0 1]/2" # s "nimble"

-- intermission

msil [d'fx1, d'fx2]

solo $ d'nim $ superimpose (iter 4 . nim'osc . (# nudge "0")) $
  mt 16 16 $
  every 3 (density 2) $
  every' 2 2 (within (0, 0.5) (const silence)) $
  whenmod 5 3 rev $
  slow 16 . striate 256 $ n "[0 1]/2" # s "nimble"

d'nim $ superimpose (iter 4 . nim'osc . (# nudge "0")) $
  every' 2 2 (within (0, 0.5) (const silence)) $
  whenmod 5 3 rev $
  slow 16 . striate 256 $ n "[0 1]/2" # s "nimble"

let s = striate 16
  in d'bass $
     slow 8 $ stack [
       s $ sound "bass",
       s $ sound "sine"
       ]
     # gain "0.9"

d'nim $ superimpose (iter 4 . nim'osc . (# nudge "0")) $
  slow 16 . striate 256 $ n "[0 1]/2" # s "nimble"

-- pt 3: funk

d'drum $ n "0*4" # s "kit"
  # gain "0.9"

d'drum $ n "0*4" # s "drum"
  # gain "0.9"

d'drum $ swing' $ stack [
  n "[1*2, 0*8, [~!! [~!! 0] ! ~!!]]/8" # s "drum",
  whenmod 3 2 (density 2) $
  withmod 11 5 0.5 1 (density 2) $
  n "[[~ 0] [[2!! ~]/4 0]]/2" # s "kit"
  ]

d'nim $ (1 ~>) $ slow 16 . striate 256 $ n "[0 1]/2" # s "nimble"

d'drum $ swing' $ stack [
  n "[1*2, 0*8, [~!! [~!! 0] ! ~!!]]/8" # s "drum",
  whenmod 3 2 (density 2) $
  withmod 11 5 0.5 1 (density 2) $
  n "[[~ 0] [[2!! ~]/4 0]]/2" # s "kit",
  n "[~ 1]/2" # s "hsn"
  # gain "0.85"
  ]

d'nim $ whenmod 16 12 (# vowel "[a i]/3") $
  (1 ~>) $ slow 16 . striate 256 $ n "[0 1]/2" # s "nimble"

d'nim $ every' 16 1 (# vowel "o u") $
  whenmod 16 12 (# vowel "[a i]/3") $
  (1 ~>) $ slow 16 . striate 256 $ n "[0 1]/2" # s "nimble"

d'drum $ swing' $ stack [
  n "[1*2, 0*8, [~!! [~!! 0] ! ~!!]]/8" # s "drum",
  whenmod 3 2 (density 2) $
  withmod 11 5 0.5 1 (density 2) $
  n "[[~ 0] [[2!! ~]/4 0]]/2" # s "kit",
  n "[~ [1 0/8 1/2 0/2]]/2" # s "hsn"
  # gain "0.85"
  ]

d'bass2 $ swing' $
  n "[~ [~ 1] [~!! 0] [~ 0 1 ~]]/4" # s "bass2"
  # speed (0.5 ~> "[2 1]")
  # gain "0.82"

d'fx2 $
  stack [
    1.75 ~> s "tubal/4",
    chop 16 $
    3.75 ~> s "duck/4"
    # gain "0.6"
    # speed "0.9"
    ]

d'fx1 $
  (2 ~>) $ chop 16 $ s "dorr/4"
  # hresonance "0.05"
  # hcutoff "200"
  # gain "0.8"

d'nim $ every' 16 1 ((# vowel "o u") . nim'del) $
  whenmod 16 12 (# vowel "[a i]/3") $
  (1 ~>) $ slow 16 . striate 256 $ n "[0 1]/2" # s "nimble"

d'fx1 $
  superimpose (slow 2) $
  (2 ~>) $ chop 16 $ s "dorr/4"
  # hresonance "0.05"
  # hcutoff "200"
  # gain "0.8"

d'wax $ slow 16 . striate 256 $ s "icarus"

d'drum $ swing' $ stack [
  n "[1*2, 0*8, [[~ 0] ~! [~!! 0] [~! 0!] ~!!]]/8" # s "drum",
  whenmod 3 2 (density 2) $
  withmod 11 5 0.5 1 (density 2) $
  n "[[~ 0] [[2!! ~]/4 0]]/2" # s "kit",
  n "[~ [1 0/8 1/2 0/2]]/2" # s "hsn"
  # gain "0.85"
  ]

d'nim $ superimpose (iter 4) $
  every' 16 1 ((# vowel "o u") . nim'del) $
  whenmod 16 12 (# vowel "[a i]/3") $
  (1 ~>) $ slow 16 . striate 256 $ n "[0 1]/2" # s "nimble"

d'nim $ superimpose (iter 4 . nim'osc) $
  every' 16 1 ((# vowel "o u") . nim'del) $
  whenmod 16 12 (# vowel "[a i]/3") $
  (1 ~>) $ slow 16 . striate 256 $ n "[0 1]/2" # s "nimble"

d'drum $ swing' $ stack [
  n "[1*2, 0*8, [[~ 0] ~! [~!! 0] [~! 0!] ~!!]]/8" # s "drum",
  n "[~ 0]" # s "kit",
  n "[~ [1 0/8 1/2 0/2]]/2" # s "hsn"
  # gain "0.85"
  ]

-- outro

msil [d'nim, d'wax, d'fx2, d'fx3]

d'hi $
  swing' $
  every 3 rev $
  whenmod 12 8 (0.5 <~) $
  (0.5 ~>) $
  slow 8 $
  gap 64 $
  n "[0 1]/2" # s "nimble"
  # speed ((-4+).(*(-1)) <$> density 1.1 sine1)

d'nim $ (0.25 ~>) $
  whenmod 4 2 (const silence) $
  slow 16 . striate 256 $ n "[0 1]/2" # s "nimble"

d'fx3 $ 3 ~> n "[0 1]/8" # s "duon"
  # gain "0.9"

d'nim $ (0.25 ~>) $
  whenmod 4 2 (const silence) $
  slow 16 . striate 256 $ n "[0 1]/2" # s "nimble"
  # vowel "o"

d'drum $ swing' $ stack [
  n "[1*2, 0*8, [[~ 0] ~! [~!! 0] [~! 0!] ~!!]]/8" # s "drum",
  every' 16 16 (const $ sound "kit:3") $
  n "[~ 0]" # s "kit",
  n "[~ [1 0/8 1/2 0/2]]/2" # s "hsn"
  # gain "0.8"
  ]

msil [d'bass, d'bass2, d'hi, d'fx1, d'fx3]

d'wax $ slow 16 . striate 256 $ s "icarus"
d'wax $ retrig $ slow 20 $ sound "icarus:1"

d'drum $ swing' $ mt 16 16 $ stack [
  n "[1*2, 0*8, [[~ 0] ~! [~!! 0] [~! 0!] ~!!]]/8" # s "drum",
  every' 16 16 (const $ sound "kit:3") $
  n "[~ 0]" # s "kit",
  n "[~ [1 0/8 1/2 0/2]]/2" # s "hsn"
  # gain "0.8"
  ]

d'nim $ mt 16 16 $
  (0.25 ~>) $
  whenmod 4 2 (const silence) $
  slow 16 . striate 256 $ n "[0 1]/2" # s "nimble"
  # vowel "o"

hush
